apply plugin: 'kotlin-multiplatform'

def getClosureByNameOrEmpty(String name) {
    if (this.properties.containsKey(name)) {
        return this.properties.find { it.key == name }.value
    } else {
        return {}
    }
}

kotlin {
    targets {
        jvm()

        final def iOSTarget = System.getenv('SDK_NAME')?.startsWith("iphoneos")      \
                                   ? presets.iosArm64 : presets.iosX64

        fromPreset(iOSTarget, 'iOS')
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin_stdlib_common
                implementation kotlinx_serialization
            }
        }

        iOSMain {
            dependsOn commonMain
            dependencies {
                implementation kotlinx_serialization_native
            }
        }

        jvmMain {
            dependsOn commonMain
            dependencies {
                implementation kotlinx_serialization_jvm
                implementation kotlin_reflect
            }
        }

        jvmTest {
            dependsOn jvmMain
            dependencies {
                jvmTestPack.each {
                    implementation it
                }
            }
            project.jvmTest {
                useJUnitPlatform()
            }
        }

        all {
            it.dependencies(getClosureByNameOrEmpty("${it.name}_dependencies"))
        }
    }
}

afterEvaluate {
    if (!project.hasProperty('test')) {
        task test()
    }
    tasks.test.dependsOn jvmTest
}