apply plugin: 'kotlin-multiplatform'

def getClosureByNameOrEmpty(String name) {
    if (this.properties.containsKey(name)) {
        return this.properties.find { it.key == name }.value
    } else {
        return {}
    }
}

kotlin {
    targets {
        jvm()

        final def iOSTarget = System.getenv('SDK_NAME')?.startsWith("iphoneos")    \
                                 ? presets.iosArm64 : presets.iosX64

        fromPreset(iOSTarget, 'iOS')
    }

    sourceSets {
        commonMain {
            dependencies(getClosureByNameOrEmpty("commonDependencyGroup"))
        }

        iOSMain {
            dependsOn commonMain
            dependencies(getClosureByNameOrEmpty("iOSDependencyGroup"))
        }

        jvmMain {
            dependsOn commonMain
            dependencies(getClosureByNameOrEmpty("jvmDependencyGroup"))
        }

        jvmTest {
            dependsOn jvmMain
            dependencies(getClosureByNameOrEmpty("jvmTestDependencyGroup"))

            project.jvmTest {
                useJUnitPlatform()
            }

            dependencies {
                api project(":common-test")
                api kotlin_reflect
            }
        }
    }
}

task test()
afterEvaluate {
    tasks.test.dependsOn jvmTest
}